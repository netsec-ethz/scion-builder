load("@rules_pkg//:pkg.bzl", "pkg_deb", "pkg_tar")
load("@rules_pkg//:rpm.bzl", "pkg_rpm")
load("//:utils.bzl", "substitute_deb_version")

# Variables used to prepare DEB and RPM packages
PKG_ARCHITECTURE = "CI_TARGET_ARCHITECTURE"

PKG_HOMEPAGE = "https://www.scion-architecture.net"

PKG_MAINTAINER = "ETH Zurich, SCIONLab Team <scionlab-admins@sympa.ethz.ch>"

PKG_PRORITY = "optional"

PKG_SECTION = "net"

PKG_VERSION_SCION_BORDER_ROUTER = "CI_PKG_VERSION_SCION_BORDER_ROUTER"

PKG_VERSION_SCION_CONTROL_SERVICE = "CI_PKG_VERSION_SCION_CONTROL_SERVICE"

PKG_VERSION_SCION_COLIBRI_SERVICE = "CI_PKG_VERSION_SCION_COLIBRI_SERVICE"

PKG_VERSION_SCION_SIG = "CI_PKG_VERSION_SCION_SIG"

PKG_VERSION_SCION_DAEMON = "CI_PKG_VERSION_SCION_DAEMON"

PKG_VERSION_SCION_DISPATCHER = "CI_PKG_VERSION_SCION_DISPATCHER"

PKG_VERSION_SCION_TOOLS = "CI_PKG_VERSION_SCION_TOOLS"

PKG_VERSION_SCIONLAB = "CI_PKG_VERSION_SCIONLAB"

# SCION Border Router
pkg_tar(
    name = "scion-border-router-bin",
    srcs = [
        "bin/scion-border-router",
    ],
    mode = "0755",
    package_dir = "/usr/bin",
)

pkg_tar(
    name = "scion-border-router-systemd",
    srcs = [
        "systemd/scion-border-router@.service",
    ],
    mode = "0644",
    package_dir = "/lib/systemd/system",
)

pkg_tar(
    name = "scion-border-router",
    extension = "tar.gz",
    deps = [
        ":scion-border-router-bin",
        ":scion-border-router-systemd",
    ],
)

pkg_deb(
    name = "scion-border-router-deb",
    architecture = PKG_ARCHITECTURE,
    data = ":scion-border-router",
    depends = [
        "adduser",
    ],
    description = "SCION Border Router",
    homepage = PKG_HOMEPAGE,
    maintainer = PKG_MAINTAINER,
    package = "scion-border-router",
    postinst = "debian/scripts/scion.postinst",
    priority = PKG_PRORITY,
    section = PKG_SECTION,
    version = PKG_VERSION_SCION_BORDER_ROUTER,
)

pkg_rpm(
    name = "scion-border-router-rpm",
    architecture = PKG_ARCHITECTURE,
    data = [
        ":scion-border-router",
    ],
    spec_file = "rhel/scion-border-router.spec",
    version = PKG_VERSION_SCION_BORDER_ROUTER,
)

# SCION Control Service
pkg_tar(
    name = "scion-control-service-bin",
    srcs = [
        "bin/scion-control-service",
    ],
    mode = "0755",
    package_dir = "/usr/bin",
)

pkg_tar(
    name = "scion-control-service-systemd",
    srcs = [
        "systemd/scion-control-service@.service",
    ],
    mode = "0644",
    package_dir = "/lib/systemd/system",
)

substitute_deb_version(
    name = "scion-control-service-preinst",
    src = "debian/scripts/scion.preinst",
    version = PKG_VERSION_SCION_CONTROL_SERVICE,
)

pkg_tar(
    name = "scion-control-service",
    extension = "tar.gz",
    deps = [
        ":scion-control-service-bin",
        ":scion-control-service-systemd",
    ],
)

pkg_deb(
    name = "scion-control-service-deb",
    architecture = PKG_ARCHITECTURE,
    data = ":scion-control-service",
    depends = [
        "adduser",
    ],
    provides = [
        "scion-beacon-server",
        "scion-path-server",
        "scion-certificate-server",
    ],
    conflicts = [
        "scion-beacon-server",
        "scion-path-server",
        "scion-certificate-server",
    ],
    replaces = [
        "scion-beacon-server",
        "scion-path-server",
        "scion-certificate-server",
    ],
    description = "SCION Control Service",
    homepage = PKG_HOMEPAGE,
    maintainer = PKG_MAINTAINER,
    package = "scion-control-service",
    postinst = "debian/scripts/scion.postinst",
    preinst = ":scion-control-service-preinst",
    priority = PKG_PRORITY,
    section = PKG_SECTION,
    version = PKG_VERSION_SCION_CONTROL_SERVICE,
)

pkg_rpm(
    name = "scion-control-service-rpm",
    architecture = PKG_ARCHITECTURE,
    data = [
        ":scion-control-service",
    ],
    spec_file = "rhel/scion-control-service.spec",
    version = PKG_VERSION_SCION_CONTROL_SERVICE,
)

# SCION Colibri Service
pkg_tar(
    name = "scion-colibri-service-bin",
    srcs = [
        "bin/scion-colibri-service",
    ],
    mode = "0755",
    package_dir = "/usr/bin",
)

pkg_tar(
    name = "scion-colibri-service-systemd",
    srcs = [
        "systemd/scion-colibri-service@.service",
    ],
    mode = "0644",
    package_dir = "/lib/systemd/system",
)

substitute_deb_version(
    name = "scion-colibri-service-preinst",
    src = "debian/scripts/scion.preinst",
    version = PKG_VERSION_SCION_COLIBRI_SERVICE,
)

pkg_tar(
    name = "scion-colibri-service",
    extension = "tar.gz",
    deps = [
        ":scion-colibri-service-bin",
        ":scion-colibri-service-systemd",
    ],
)

pkg_deb(
    name = "scion-colibri-service-deb",
    architecture = PKG_ARCHITECTURE,
    data = ":scion-colibri-service",
    depends = [
        "adduser",
    ],
    description = "SCION Colibri Service",
    homepage = PKG_HOMEPAGE,
    maintainer = PKG_MAINTAINER,
    package = "scion-colibri-service",
    postinst = "debian/scripts/scion.postinst",
    preinst = ":scion-colibri-service-preinst",
    priority = PKG_PRORITY,
    section = PKG_SECTION,
    version = PKG_VERSION_SCION_COLIBRI_SERVICE,
)

pkg_rpm(
    name = "scion-colibri-service-rpm",
    architecture = PKG_ARCHITECTURE,
    data = [
        ":scion-colibri-service",
    ],
    spec_file = "rhel/scion-colibri-service.spec",
    version = PKG_VERSION_SCION_COLIBRI_SERVICE,
)

# SIG (Scion IP Gateway)
pkg_tar(
    name = "scion-sig-bin",
    srcs =[
        "bin/scion-ip-gateway",
    ],
    mode = "0755",
    package_dir = "/usr/bin",
)

pkg_tar(
    name = "scion-sig-systemd",
    srcs = [
        "systemd/scion-ip-gateway.service",
    ],
    mode = "0644",
    package_dir = "/lib/systemd/system",
)

pkg_tar(
    name = "scion-sig-config",
    srcs = [
        "hostfiles/sig.toml",
        "hostfiles/sig.json",
    ],
    mode = "0644",
    package_dir = "/etc/scion/",
)

pkg_tar(
    name = "scion-sig",
    extension = "tar.gz",
    deps = [
        ":scion-sig-bin",
        ":scion-sig-systemd",
        ":scion-sig-config",
    ],
)

pkg_deb(
    name = "scion-sig-deb",
    architecture = PKG_ARCHITECTURE,
    data = ":scion-sig",
    depends = [
        "libcap2-bin",
        "scion-daemon",
        "scion-dispatcher",
    ],
    description = "SCION IP Gateway",
    homepage = PKG_HOMEPAGE,
    maintainer = PKG_MAINTAINER,
    package = "scion-sig",
    postinst = "debian/scripts/sig.postinst",
    priority = PKG_PRORITY,
    section = PKG_SECTION,
    version = PKG_VERSION_SCION_SIG,
    conffiles = [
        "/etc/scion/sig.toml",
        "/etc/scion/sig.json",
    ],
)

pkg_rpm(
    name = "scion-sig-rpm",
    architecture = PKG_ARCHITECTURE,
    data = [
        ":scion-sig",
    ],
    spec_file = "rhel/scion-sig.spec",
    version = PKG_VERSION_SCION_SIG,
)

# SCION Daemon
pkg_tar(
    name = "scion-daemon-config",
    srcs = [
        "hostfiles/sciond.toml",
    ],
    mode = "0644",
    package_dir = "/etc/scion/",
)

pkg_tar(
    name = "scion-daemon-bin",
    srcs = [
        "bin/sciond",
    ],
    mode = "0755",
    package_dir = "/usr/bin",
)

pkg_tar(
    name = "scion-daemon-systemd",
    srcs = [
        "systemd/scion-daemon.service",
    ],
    mode = "0644",
    package_dir = "/lib/systemd/system",
)

pkg_tar(
    name = "scion-daemon",
    extension = "tar.gz",
    deps = [
        ":scion-daemon-bin",
        ":scion-daemon-systemd",
        ":scion-daemon-config",
    ],
)

substitute_deb_version(
    name = "scion-daemon-preinst",
    src = "debian/scripts/scion.preinst",
    version = PKG_VERSION_SCION_DAEMON,
)

pkg_deb(
    name = "scion-daemon-deb",
    architecture = PKG_ARCHITECTURE,
    data = ":scion-daemon",
    depends = [
        "adduser",
    ],
    description = "SCION Daemon",
    homepage = PKG_HOMEPAGE,
    maintainer = PKG_MAINTAINER,
    package = "scion-daemon",
    postinst = "debian/scripts/scion.postinst",
    preinst = ":scion-daemon-preinst",
    priority = PKG_PRORITY,
    section = PKG_SECTION,
    version = PKG_VERSION_SCION_DAEMON,
    conffiles = [
        "/etc/scion/sciond.toml",
    ],
)

pkg_rpm(
    name = "scion-daemon-rpm",
    architecture = PKG_ARCHITECTURE,
    data = [
        ":scion-daemon",
    ],
    spec_file = "rhel/scion-daemon.spec",
    version = PKG_VERSION_SCION_DAEMON,
)

# SCION Dispatcher
pkg_tar(
    name = "scion-dispatcher-config",
    srcs = [
        "hostfiles/dispatcher.toml",
    ],
    mode = "0644",
    package_dir = "/etc/scion/",
)

pkg_tar(
    name = "scion-dispatcher-bin",
    srcs = [
        "bin/scion-dispatcher",
    ],
    mode = "0755",
    package_dir = "/usr/bin",
)

pkg_tar(
    name = "scion-dispatcher-systemd",
    srcs = [
        "systemd/scion-dispatcher.service",
    ],
    mode = "0644",
    package_dir = "/lib/systemd/system",
)

pkg_tar(
    name = "scion-dispatcher",
    extension = "tar.gz",
    deps = [
        ":scion-dispatcher-bin",
        ":scion-dispatcher-systemd",
        ":scion-dispatcher-config",
    ],
)

pkg_deb(
    name = "scion-dispatcher-deb",
    architecture = PKG_ARCHITECTURE,
    data = ":scion-dispatcher",
    depends = [
        "adduser",
    ],
    description = "SCION Dispatcher",
    homepage = PKG_HOMEPAGE,
    maintainer = PKG_MAINTAINER,
    package = "scion-dispatcher",
    postinst = "debian/scripts/scion.postinst",
    priority = PKG_PRORITY,
    section = PKG_SECTION,
    version = PKG_VERSION_SCION_DISPATCHER,
    conffiles = [
        "/etc/scion/dispatcher.toml",
    ],
)

pkg_rpm(
    name = "scion-dispatcher-rpm",
    architecture = PKG_ARCHITECTURE,
    data = [
        ":scion-dispatcher",
    ],
    spec_file = "rhel/scion-dispatcher.spec",
    version = PKG_VERSION_SCION_DISPATCHER,
)

# SCION Tools
pkg_tar(
    name = "scion-tools-bin",
    srcs = [
        "bin/scion",
        "bin/scion-pki",
        "bin/pathdb_dump",
    ],
    mode = "0755",
    package_dir = "/usr/bin",
)

pkg_deb(
    name = "scion-tools-deb",
    architecture = PKG_ARCHITECTURE,
    data = ":scion-tools-bin",
    depends = [
        "adduser",
        "scion-daemon",
        "scion-dispatcher",
    ],
    breaks = [
        "scion-apps-webapp (<= 2.1.1)",
    ],
    description = "SCION Tools",
    homepage = PKG_HOMEPAGE,
    maintainer = PKG_MAINTAINER,
    package = "scion-tools",
    postinst = "debian/scripts/scion.postinst",
    priority = PKG_PRORITY,
    section = PKG_SECTION,
    version = PKG_VERSION_SCION_TOOLS,
)

pkg_rpm(
    name = "scion-tools-rpm",
    architecture = PKG_ARCHITECTURE,
    data = [
        ":scion-tools-bin",
    ],
    spec_file = "rhel/scion-tools.spec",
    version = PKG_VERSION_SCION_TOOLS,
)

# SCIONLab
pkg_tar(
    name = "scionlab-config-bin",
    srcs = [
        "scionlab/scionlab/hostfiles/scionlab-config",
    ],
    mode = "0755",
    package_dir = "/usr/bin",
)

pkg_tar(
    name = "scionlab-systemd",
    srcs = [
        "systemd/scionlab.target",
        "scionlab/scionlab/hostfiles/scionlab-config.service",
    ],
    mode = "0644",
    package_dir = "/lib/systemd/system",
)

pkg_tar(
    name = "scionlab",
    extension = "tar.gz",
    deps = [
        ":scionlab-config-bin",
        ":scionlab-systemd",
    ],
)

pkg_deb(
    name = "scionlab-deb",
    architecture = PKG_ARCHITECTURE,
    data = ":scionlab",
    depends = [
        "scion-border-router (=" + PKG_VERSION_SCION_BORDER_ROUTER + ")",
        "scion-control-service (=" + PKG_VERSION_SCION_CONTROL_SERVICE + ")",
        "scion-colibri-service (=" + PKG_VERSION_SCION_COLIBRI_SERVICE + ")",
        "scion-daemon (=" + PKG_VERSION_SCION_DAEMON + ")",
        "scion-dispatcher (=" + PKG_VERSION_SCION_DISPATCHER + ")",
        "scion-tools (=" + PKG_VERSION_SCION_TOOLS + ")",
        "python3 (>=3.5)",
    ],
    description = "SCIONLab",
    homepage = PKG_HOMEPAGE,
    maintainer = PKG_MAINTAINER,
    package = "scionlab",
    postinst = "debian/scripts/scionlab.postinst",
    postrm = "debian/scripts/scionlab.postrm",
    preinst = "debian/scripts/scionlab.preinst",
    prerm = "debian/scripts/scionlab.prerm",
    priority = PKG_PRORITY,
    recommends = [
        "openvpn",
    ],
    section = PKG_SECTION,
    version = PKG_VERSION_SCIONLAB,
)

pkg_rpm(
    name = "scionlab-rpm",
    architecture = PKG_ARCHITECTURE,
    data = [
        ":scionlab",
    ],
    spec_file = "rhel/scionlab.spec",
    version = PKG_VERSION_SCIONLAB,
)
