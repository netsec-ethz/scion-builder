#!/usr/bin/env bash
set -e

# summary of how this script can be called:
#
# new-preinst install
# new-preinst install <old-version>
# new-preinst upgrade <old-version>
#
#     The package will not yet be unpacked, so the preinst script cannot rely on
#     any files included in its package. Only essential packages and
#     pre-dependencies (Pre-Depends) may be assumed to be available.
#     Pre-dependencies will have been configured at least once, but at the time
#     the preinst is called they may only be in an "Unpacked" or
#     "Half-Configured" state if a previous version of the pre-dependency was
#     completely configured and has not been removed since then.
#
# old-preinst abort-upgrade <new-version>
#     Called during error handling of an upgrade that failed after unpacking the
#     new package because the postrm upgrade action failed. The unpacked files
#     may be partly from the new version or partly missing, so the script cannot
#     rely on files included in the package. Package dependencies may not be
#     available. Pre-dependencies will be at least "Unpacked" following the same
#     rules as above, except they may be only "Half-Installed" if an upgrade of
#     the pre-dependency failed. [2] 


case "$1" in
    upgrade|install)
        old_version=$2
        new_version=__DEB_VERSION__
        old_major="${old_version%%.*}"
        new_major="${new_version%%.*}"
        if [ "$old_major" != "$new_major" ]; then
          # Remove potentially incompatible cache
          rm -rf /var/lib/scion/*.db
        fi

        ;;
    *)
        ;;
esac
