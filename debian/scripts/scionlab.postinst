#!/usr/bin/env bash
set -e

# summary of how this script can be called:
#        * <postinst> `configure' <most-recently-configured-version>
#        * <old-postinst> `abort-upgrade' <new version>
#        * <conflictor's-postinst> `abort-remove' `in-favour' <package>
#          <new-version>
#        * <postinst> `abort-remove'
#        * <deconfigured's-postinst> `abort-deconfigure' `in-favour'
#          <failed-install-package> <version> `removing'
#          <conflicting-package> <version>
# for details, see http://www.debian.org/doc/debian-policy/ or
# the debian-policy package

# source debconf library
. /usr/share/debconf/confmodule

case "$1" in
    configure)
        if [ ! -f /.dockerenv ]; then
            systemctl daemon-reload > /dev/null 2>&1
        fi

        # enable systemd target if the package is installed for the first time
        # and preserve user's setting if this is an upgrade
        if [ -z "$2" ] && [ ! -f /.dockerenv ]; then
            systemctl enable scionlab.target > /dev/null 2>&1
        fi

        # remove no longer needed gen-certs/tls.{pem,key}
        rm -r "/etc/scion/gen-certs" 2> /dev/null || true

        # refresh the configuration and restart services (systemctl restart scionlab.target must be called in scionlab-config)
        if [ -f "/etc/scion/scionlab-config.json" -o -f "/etc/scion/gen/scionlab-config.json" ]; then
            scionlab-config --force || true
        fi
        
        # expiclitly restart services in case scionlab config was not updated
        if [ ! -f /.dockerenv ]; then
            systemctl restart scionlab.target > /dev/null 2>&1
        fi
        ;;
    abort-*)
        # How'd we get here??
        exit 1
        ;;
    *)
        ;;
esac
